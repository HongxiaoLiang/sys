/*
********************************************************************************************
 版权所有 (C)，2011－2015，泉州禾逸电子有限公司
----------------------------------------------------------------------------------------
头文件名：        　Wifi.h
头文件名称：      　Wifi的头文件
文件版本：　　      1.0
文件功能：
　　　　本文件是对   的各硬件技术标准、电路设计结构和软件运行参数，进行定义配置的
　　头文件。
文件说明：
　　　　１．本文件中的所有标识符定义前缀字母表示意义如下：
	 	        c  ---------- 常量
　　　　　　v  ---------- 变量
			      en ---------- 枚举
　　　　　　g  ---------- 全局变量（Global）
            s  ---------- 静态变量（Static）
　　　　　　l  ---------- 局部变量（Local）
　　　　　　uc ---------- 数据类型（Unsigned Char）
　　　　　　ui ---------- 数据类型（Unsigned Word）
　　　　　　p  ---------- 指针
　　　　　　st ---------- 数据体
　　　　　　pt ---------- 指向数据体的指针
            Pre --------- 条件编译预定义
            
            stru -------- 定义数据体
            enum -------- 定义枚举
　　　　２．

主要函数列表：


编译工具软件：      ［］
链接文件：          ▲．目标器件芯片的头文件

编作者：            
编作者 E-Mail：     
编制日期：          
----------------------------------------------------------------------------------------
头文件版本历史：

********************************************************************************************
*/



/*==========================================================================================
下面两条指令是本头文件条件编译的预处理指令，用于防止本头文件被其他文件重复引用。
==========================================================================================*/
#ifndef _Wifi_H_                        // “_Wifi_H_”条件编译开始
#define _Wifi_H_


/*==========================================================================================
　　　　　　　　　　　　　　        本源程序包括的头文件
建议：包含本项目的文件使用 #include "文件名.扩展名" ，
　　　包含系统库的文件使用 #include <文件名.扩展名> 。
==========================================================================================*/
#include "stm32f4xx.h"                       	// 目标器件芯片的头文件
#include "sysconfig.h"                     		// 系统配置的头文件
#include "Main.h"                         		// 主程序的头文件

#include "Usart2deal.h"                        // 串口2处理的头文件

/*==========================================================================================
下面这三条指令是用于区分编译系统为 C++ 或 C 的预处理指令。
"__cplusplus" 为 C++ 预处理器名字，这三条指令表明接在其下面的那些指令为 C 程序特征。
==========================================================================================*/
#ifdef __cplusplus
extern "C" {
#endif



/*==========================================================================================
                                系统运行的各类字符化常数定义
==========================================================================================*/

/*--------------------------------------------------------------------------------------
为了做到较好的软件可移植性，推荐用户在编程时使用下面定义的数据类型大小
--------------------------------------------------------------------------------------*/
#define  RESET_IO(x)    GPIO_WriteBit(GPIOA, GPIO_Pin_4, (BitAction)x) 

#define  Wifi_Printf   EspAt_printf

#define  Wifi_RxCounter    gstvEspAt.RxCounter
#define  Wifi_RxBuf         gstvEspAt.RxBuff
#define  Wifi_RxBuff_Size  USART2_RXBUFF_SIZE


#define SSID   "huawei5i"                   //路由器SSID名称
#define PASS   "12345678"                   //路由器密码



/*--------------------------------------------------------------------------------------
的字符化常数定义
--------------------------------------------------------------------------------------*/


/*==========================================================================================
                                      条件编译控制声明
==========================================================================================*/
//#define PreDebug                              // 全局调试声明



/*--------------------------------------------------------------------------------------
声明 的条件定义：
--------------------------------------------------------------------------------------*/







/*==========================================================================================
                      各类字符化常数和硬件设计相关的输入／输出引脚定义
==========================================================================================*/

/*--------------------------------------------------------------------------------------
的输入／输出引脚定义：
--------------------------------------------------------------------------------------*/


/*==========================================================================================
                                  全局变量数据结构类型定义
==========================================================================================*/
/*--------------------------------------------------------------------------------------
的全局标志定义：
--------------------------------------------------------------------------------------*/
typedef struct
{
  u8  WifiMode:   1;       // 联网模式  0: SSID和密码写在程序里   1：Smartconfig方式用APP发送
}WifiBits;


/*--------------------------------------------------------------------------------------
的全局数据结构类型定义：
--------------------------------------------------------------------------------------*/




/*==========================================================================================
                                        全局常量声明
==========================================================================================*/







/*==========================================================================================
                                        全局变量声明
==========================================================================================*/

/*--------------------------------------------------------------------------------------
WIFI标志的全局变量声明：
--------------------------------------------------------------------------------------*/
extern WifiBits gbitWifi;


/*--------------------------------------------------------------------------------------
的全局变量声明：
--------------------------------------------------------------------------------------*/


/*==========================================================================================
                                 源程序文件中的函数原型声明
==========================================================================================*/
/*-------------------------------------------------*/
/*函数名：初始化WiFi的复位IO                       */
/*参  数：无                                       */
/*返回值：无                                       */
/*-------------------------------------------------*/
void WiFiResetIO_Init(void);


/*-------------------------------------------------*/
/*函数名：WiFi发送设置指令                         */
/*参  数：cmd：指令                                */
/*参  数：timeout：超时时间（100ms的倍数）         */
/*返回值：0：正确   其他：错误                     */
/*-------------------------------------------------*/
vs8  WiFiSendCmd(u8 *cmd, int timeout);


/*-------------------------------------------------*/
/*函数名：WiFi复位                                 */
/*参  数：timeout：超时时间（100ms的倍数）         */
/*返回值：0：正确   其他：错误                     */
/*-------------------------------------------------*/
vs8  WiFiReset(int timeout);


/*-------------------------------------------------*/
/*函数名：WiFi加入路由器指令                       */
/*参  数：timeout：超时时间（1s的倍数）            */
/*返回值：0：正确   其他：错误                     */
/*-------------------------------------------------*/
vs8 WiFiJoinAP(int timeout);


/*-------------------------------------------------*/
/*函数名：连接TCP服务器，并进入透传模式            */
/*参  数：timeout： 超时时间（100ms的倍数）        */
/*返回值：0：正确  其他：错误                      */
/*-------------------------------------------------*/
vs8 WiFiConnectServer(int timeout);


/*-------------------------------------------------*/
/*函数名：WiFi_Smartconfig                         */
/*参  数：timeout：超时时间（1s的倍数）            */
/*返回值：0：正确   其他：错误                     */
/*-------------------------------------------------*/
vs8  WiFiSmartconfig(int timeout);


/*-------------------------------------------------*/
/*函数名：等待加入路由器                           */
/*参  数：timeout：超时时间（1s的倍数）            */
/*返回值：0：正确   其他：错误                     */
/*-------------------------------------------------*/
vs8  WiFiWaitAP(int timeout);


/*-------------------------------------------------*/
/*函数名：WiFi连接服务器                           */
/*参  数：无                                       */
/*返回值：0：正确   其他：错误                     */
/*-------------------------------------------------*/
vs8 WifiConnectIoTServer(void);


/*==========================================================================================
下面这三条指令是用于与上面三条区分编译系统为 C++ 或 C 的预处理指令相对应。用于指定
 extern "C" 链接指示符作用域，此处的"}"与上面的"{"相对应，为链接指示符作用结束符。
==========================================================================================*/
#ifdef __cplusplus
}
#endif


#endif                                        // “_Wifi_H_”条件编译结束


/*
********************************************************************************************
                                     本头文件到此结束
********************************************************************************************
*/




