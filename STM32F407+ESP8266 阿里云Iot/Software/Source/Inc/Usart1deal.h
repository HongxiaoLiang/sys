/*
********************************************************************************************
 版权所有 (C)，2011－2015，泉州禾逸电子有限公司
----------------------------------------------------------------------------------------
头文件名：        　Usart1deal.h
头文件名称：      　无线接收处理的头文件
文件版本：　　      1.0
文件功能：
　　　　本文件是对   的各硬件技术标准、电路设计结构和软件运行参数，进行定义配置的
　　头文件。
文件说明：
　　　　１．本文件中的所有标识符定义前缀字母表示意义如下：
	 	        c  ---------- 常量
　　　　　　v  ---------- 变量
			      en ---------- 枚举
　　　　　　g  ---------- 全局变量（Global）
            s  ---------- 静态变量（Static）
　　　　　　l  ---------- 局部变量（Local）
　　　　　　uc ---------- 数据类型（Unsigned Char）
　　　　　　ui ---------- 数据类型（Unsigned Word）
　　　　　　p  ---------- 指针
　　　　　　st ---------- 数据体
　　　　　　pt ---------- 指向数据体的指针
            Pre --------- 条件编译预定义
            
            stru -------- 定义数据体
            enum -------- 定义枚举
　　　　２．

主要函数列表：


编译工具软件：      ［］
链接文件：          ▲．目标器件芯片的头文件

编作者：            
编作者 E-Mail：     
编制日期：          
----------------------------------------------------------------------------------------
头文件版本历史：

********************************************************************************************
*/



/*==========================================================================================
下面两条指令是本头文件条件编译的预处理指令，用于防止本头文件被其他文件重复引用。
==========================================================================================*/
#ifndef _Usart1_Deal_H_                        // “_Usart_Deal_H_”条件编译开始
#define _Usart1_Deal_H_


/*==========================================================================================
　　　　　　　　　　　　　　        本源程序包括的头文件
建议：包含本项目的文件使用 #include "文件名.扩展名" ，
　　　包含系统库的文件使用 #include <文件名.扩展名> 。
==========================================================================================*/

#include "stm32f4xx.h"                         		// 目标器件芯片的头文件
#include "sysconfig.h"                     		// 系统配置的头文件
#include "Main.h"                         		// 主程序的头文件
#include "stdio.h"
#include "string.h"
#include "stdarg.h"



/*==========================================================================================
下面这三条指令是用于区分编译系统为 C++ 或 C 的预处理指令。
"__cplusplus" 为 C++ 预处理器名字，这三条指令表明接在其下面的那些指令为 C 程序特征。
==========================================================================================*/
#ifdef __cplusplus
extern "C" {
#endif



/*==========================================================================================
                                系统运行的各类字符化常数定义
==========================================================================================*/

/*--------------------------------------------------------------------------------------
为了做到较好的软件可移植性，推荐用户在编程时使用下面定义的数据类型大小
--------------------------------------------------------------------------------------*/



/*--------------------------------------------------------------------------------------
的字符化常数定义
--------------------------------------------------------------------------------------*/
#define  USART1_RX_ENABLE   0  // 是否开启接收功能  1: 开启   0: 关闭

#define  USART1_TXBUFF_SIZE  256          // 发送缓冲区大小

#if  USART1_RX_ENABLE
#define USART1_RXBUFF_SIZE  256           // 接收缓冲区大小
#endif


/*==========================================================================================
                                      条件编译控制声明
==========================================================================================*/
//#define PreDebug                              // 全局调试声明



/*--------------------------------------------------------------------------------------
声明 的条件定义：
--------------------------------------------------------------------------------------*/







/*==========================================================================================
                      各类字符化常数和硬件设计相关的输入／输出引脚定义
==========================================================================================*/

/*--------------------------------------------------------------------------------------
的输入／输出引脚定义：
--------------------------------------------------------------------------------------*/
#define  cPrintfUsart1            USART1
#define  cPrintfUsart1Clk         RCC_APB2Periph_USART1

#define  cPrintfRxPin              GPIO_Pin_10
#define  cPrintfRxPort             GPIOA
#define  cPrintfRxPortClk          RCC_AHB1Periph_GPIOA
#define  cPrintfRxAF                GPIO_AF_USART1          // 引脚复用
#define  cPrintfRxSource            GPIO_PinSource10

#define  cPrintfTxPin               GPIO_Pin_9
#define  cPrintfTxPort              GPIOA
#define  cPrintfTxPortClk           RCC_AHB1Periph_GPIOA
#define  cPrintfTxAF                 GPIO_AF_USART1         // 引脚复用
#define  cPrintfTxSource             GPIO_PinSource9

#define  cPrintfBaudrate             115200


/*==========================================================================================
                                  全局变量数据结构类型定义
==========================================================================================*/
/*--------------------------------------------------------------------------------------
串口1调试打印的全局标志定义：
--------------------------------------------------------------------------------------*/
typedef struct 
{
#if  USART1_RX_ENABLE
  u8  RxCompleted:           1;        // 接收标记 0: 表示接收未完成  1: 表示接收完成
#endif
  u8  TxCompleted:           1;        // 发送标记 0: 表示接收未完成  1: 表示接收完成
}PrintfUsart1Bits;

/*--------------------------------------------------------------------------------------
串口1调试打印的全局数据结构类型定义：
--------------------------------------------------------------------------------------*/
typedef 	struct 
{
#if  USART1_RX_ENABLE
  u16  RxCounter;                   // 串口1总共接收了多少字节的数据
  u8   RxBuff[USART1_RXBUFF_SIZE];  // 接收数据缓冲区
#endif
  u8   TxBuff[USART1_TXBUFF_SIZE];  // 发送数据缓冲区
}PrintfUsart1Stru;




/*==========================================================================================
                                        全局常量声明
==========================================================================================*/
/*--------------------------------------------------------------------------------------
串口1调试打印标志的全局常量声明：
--------------------------------------------------------------------------------------*/
extern PrintfUsart1Bits gbitPrintf;

/*--------------------------------------------------------------------------------------
串口1调试打印的全局数据结构类型的全局常量声明：
--------------------------------------------------------------------------------------*/
extern PrintfUsart1Stru gstvPrintf;






/*==========================================================================================
                                        全局变量声明
==========================================================================================*/

/*--------------------------------------------------------------------------------------
的全局变量声明：
--------------------------------------------------------------------------------------*/


/*--------------------------------------------------------------------------------------
的全局变量声明：
--------------------------------------------------------------------------------------*/


/*==========================================================================================
                                 源程序文件中的函数原型声明
==========================================================================================*/

/*--------------------------------------------------------------------------------------
函数名称：    初始化串口1发送功能
函数功能：    本函数用于初始化串口1发送功能
函数入口参数：bound: 波特率
函数返回值：  没有
调用函数：　　１．
　　　　　　　　　
备注：        本函数仅在主函数中调用一次即可。
--------------------------------------------------------------------------------------*/
void PrintUsart1_Init(void);



/*--------------------------------------------------------------------------------------
函数名称：    串口1 printf 函数
函数功能：    本函数用于串口1 printf 函数
函数入口参数：char* fmt,...  格式化输出字符串和参数   
函数返回值：  没有
调用函数：　　１．
　　　　　　　　　
备注：        本函数仅在主函数中调用一次即可。
--------------------------------------------------------------------------------------*/
void u1_printf(char *fmt, ...);






/*==========================================================================================
下面这三条指令是用于与上面三条区分编译系统为 C++ 或 C 的预处理指令相对应。用于指定
 extern "C" 链接指示符作用域，此处的"}"与上面的"{"相对应，为链接指示符作用结束符。
==========================================================================================*/
#ifdef __cplusplus
}
#endif


#endif                                        // “_Uart_Radio_H_”条件编译结束


/*
********************************************************************************************
                                     本头文件到此结束
********************************************************************************************
*/


